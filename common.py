from aiogram import types, F, Router
from aiogram.filters.command import Command
import logging
import random
from keyboards.keyboards import kb1, kb2
from utils.random_fox import fox


router = Router()


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb1)


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command('stop'))
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü–æ–∫–∞, {name}')


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command('fox'))
@router.message(Command('–ª–∏—Å–∞'))
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo=img_fox)
# await message.answer_
# await bot.send_photo(message.from_user.id, photo=img_fox)
    
#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /cat
@dp.message(Command('cat'))
@dp.message(Command('–∫–æ—Ç'))
@dp.message(Command('–∫–æ—Ç–∞'))
@dp.message(Command('–∫–æ—Ç–æ–≤'))
@dp.message(Command('–∫–æ—à–∫–∞'))
@dp.message(Command('–∫–æ—à–∫—É'))
@dp.message(Command('–∫–æ—à–µ–∫'))
@dp.message(Command('–∫–æ—Ç–µ–Ω–æ–∫'))
@dp.message(Command('–∫–æ—Ç–µ–Ω–∫–∞'))
@dp.message(Command('–∫–æ—Ç—è—Ç'))
@dp.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –∫–æ—Ç–∞')
async def cmd_cat(message: types.Message):
    name = message.chat.first_name
    img_cat = cat()
    await message.answer(f'–î–µ—Ä–∂–∏ –∫–æ—Ç–æ–≤, {name}')
    await message.answer_photo(photo=img_cat)
# await bot.send_photo(message.from_user.id, photo=img_cat)



#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer_dice(emoji="üé≤")
    elif '–ª–∏—Å–∞' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup=kb2)
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')